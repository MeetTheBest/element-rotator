// Generated by dts-bundle-generator v9.4.0

import Event$1 from 'events';

export interface IOptions {
	rotate?: number;
	top?: number | string;
	able?: Element;
}
export interface IPos {
	x: number;
	y: number;
}
export declare class ElementRotator extends Event$1 {
	centerPos: IPos;
	startPos: IPos;
	originRotate: number;
	target: HTMLElement | null;
	container: HTMLElement | null;
	options: IOptions;
	targetClassName: string;
	constructor(container: HTMLElement, options?: IOptions);
	createTargetElement(): void;
	setInitStyle(): void;
	calcCenterPos(): void;
	setCenterPos(pos: IPos): void;
	destroy(): void;
	registryEvents(): void;
	destroyEvents(): this;
	/**
	 * 鼠标按下
	 * @param event
	 */
	onMouseDown: (event: MouseEvent) => void;
	/**
	 * 鼠标移动
	 * @param event
	 */
	onMouseMove: (event: MouseEvent) => void;
	/**
	 * 鼠标抬起
	 */
	onMouseUp: (event: MouseEvent) => void;
	/**
	 * 计算旋转角度
	 * @param initialPoint - 开始点位
	 * @param finalPoint - 结束点位
	 * @returns
	 */
	calcRotate(initialPoint: IPos, finalPoint: IPos): number;
}

export {
	ElementRotator as default,
};

export {};
